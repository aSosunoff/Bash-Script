#!/usr/bin/env bash

if [ -n "$1" ]; then
	echo "echo param by a for"
	for item in "$*"; do
		echo "$item"
	done

	echo $'\n'
	echo "echo param by a for"
	for item in "$@"; do
		echo "$item"
	done
fi
:<<'END_COMMENT'
# Захват всех параметров командной строки

В некоторых случаях нужно захватить все параметры, переданные скрипту. Для этого можно воспользоваться переменными $* и $@. Обе они содержат все параметры командной строки, что делает возможным доступ к тому, что передано сценарию, без использования позиционных параметров.

Переменная $* содержит все параметры, введённые в командной строке, в виде единого «слова».

В переменной $@ параметры разбиты на отдельные «слова». Эти параметры можно перебирать в циклах.

Рассмотрим разницу между этими переменными на примерах. Сначала взглянем на их содержимое:

```bash
#!/bin/bash
echo "Using the \$* method: $*"
echo "-----------"
echo "Using the \$@ method: $@"
```

Как видно, при выводе обеих переменных получается одно и то же. Теперь попробуем пройтись по содержимому этих переменных в циклах для того, чтобы увидеть разницу между ними:

```bash
#!/bin/bash
count=1
for param in "$*" do
	echo "\$* Parameter #$count = $param"
	count=$(( $count + 1 ))
done

count=1

for param in "$@"do
	echo "\$@ Parameter #$count = $param"
	count=$(( $count + 1 ))
done
```

Переменная $* содержит все переданные скрипту параметры как единый фрагмент данных, в то время как в переменной $@ они представлены самостоятельными значениями. Какой именно переменной воспользоваться — зависит от того, что именно нужно в конкретном сценарии.
END_COMMENT