#!/usr/bin/env bash

awk -F: -f mycommand myfile
:<<'END_COMMENT'
# Чтение скрипта awk из файла

Awk позволяет хранить скрипты в файлах и ссылаться на них, используя ключ `-f`. Подготовим файл `testfile`, в который запишем следующее:

```bash
{print $1 " has a  home directory at " $6}
```

Вызовем awk, указав этот файл в качестве источника команд:

```bash
$ awk -F: -f testfile /etc/passwd
```

Тут мы выводим из файла /etc/passwd имена пользователей, которые попадают в переменную `$1`, и их домашние директории, которые попадают в `$6`. Обратите внимание на то, что файл скрипта задают с помощью ключа `-f`, а разделитель полей, двоеточие в нашем случае, с помощью ключа `-F`.

В файле скрипта может содержаться множество команд, при этом каждую из них достаточно записывать с новой строки, ставить после каждой точку с запятой не требуется.
Вот как это может выглядеть:

```bash
{
    text = " has a  home directory at "
    print $1 text $6
}
```

Тут мы храним текст, используемый при выводе данных, полученных из каждой строки обрабатываемого файла, в переменной, и используем эту переменную в команде `print`. Если воспроизвести предыдущий пример, записав этот код в файл `testfile`, выведено будет то же самое.
END_COMMENT